diff -Nurp binutils-2.15.92.0.2/bfd/elf-bfd.h binutils-2.15.92.0.2-pax/bfd/elf-bfd.h
--- binutils-2.15.92.0.2/bfd/elf-bfd.h	2004-09-27 22:46:06.000000000 +0200
+++ binutils-2.15.92.0.2-pax/bfd/elf-bfd.h	2005-03-11 21:14:17.000000000 +0100
@@ -1261,6 +1261,9 @@ struct elf_obj_tdata
   /* Should the PT_GNU_RELRO segment be emitted?  */
   bfd_boolean relro;
 
+  /* Segment flags for the PT_PAX_FLAGS segment.  */
+  unsigned int pax_flags;
+
   /* Symbol version definitions in external objects.  */
   Elf_Internal_Verdef *verdef;
 
diff -Nurp binutils-2.15.92.0.2/bfd/elf.c binutils-2.15.92.0.2-pax/bfd/elf.c
--- binutils-2.15.92.0.2/bfd/elf.c	2004-09-27 22:46:06.000000000 +0200
+++ binutils-2.15.92.0.2-pax/bfd/elf.c	2005-03-11 21:14:17.000000000 +0100
@@ -1043,6 +1043,7 @@ _bfd_elf_print_private_bfd_data (bfd *ab
 	    case PT_GNU_EH_FRAME: pt = "EH_FRAME"; break;
 	    case PT_GNU_STACK: pt = "STACK"; break;
 	    case PT_GNU_RELRO: pt = "RELRO"; break;
+	    case PT_PAX_FLAGS: pt = "PAX_FLAGS"; break;
 	    default: sprintf (buf, "0x%lx", p->p_type); pt = buf; break;
 	    }
 	  fprintf (f, "%8s off    0x", pt);
@@ -2368,6 +2369,9 @@ bfd_section_from_phdr (bfd *abfd, Elf_In
     case PT_GNU_RELRO:
       return _bfd_elf_make_section_from_phdr (abfd, hdr, index, "relro");
 
+    case PT_PAX_FLAGS:
+      return _bfd_elf_make_section_from_phdr (abfd, hdr, index, "pax_flags");
+
     default:
       /* Check for any processor-specific program segment types.
          If no handler for them, default to making "segment" sections.  */
@@ -3688,6 +3692,20 @@ map_sections_to_segments (bfd *abfd)
       pm = &m->next;
     }
 
+    {
+      amt = sizeof (struct elf_segment_map);
+      m = bfd_zalloc (abfd, amt);
+      if (m == NULL)
+	goto error_return;
+      m->next = NULL;
+      m->p_type = PT_PAX_FLAGS;
+      m->p_flags = elf_tdata (abfd)->pax_flags;
+      m->p_flags_valid = 1;
+
+      *pm = m;
+      pm = &m->next;
+    }
+
   free (sections);
   sections = NULL;
 
@@ -4383,6 +4401,11 @@ get_program_header_size (bfd *abfd)
       ++segs;
     }
 
+    {
+      /* We need a PT_PAX_FLAGS segment.  */
+      ++segs;
+    }
+
   for (s = abfd->sections; s != NULL; s = s->next)
     {
       if ((s->flags & SEC_LOAD) != 0
@@ -4926,7 +4949,8 @@ copy_private_bfd_data (bfd *ibfd, bfd *o
        4. The section has not already been allocated to a previous segment.
        5. PT_GNU_STACK segments do not include any sections.
        6. PT_TLS segment includes only SHF_TLS sections.
-       7. SHF_TLS sections are only in PT_TLS or PT_LOAD segments.  */
+       7. SHF_TLS sections are only in PT_TLS or PT_LOAD segments.
+       8. PT_PAX_FLAGS segments do not include any sections.  */
 #define INCLUDE_SECTION_IN_SEGMENT(section, segment, bed)		\
   ((((segment->p_paddr							\
       ? IS_CONTAINED_BY_LMA (section, segment, segment->p_paddr)	\
@@ -4935,6 +4959,7 @@ copy_private_bfd_data (bfd *ibfd, bfd *o
     || IS_COREFILE_NOTE (segment, section))				\
    && section->output_section != NULL					\
    && segment->p_type != PT_GNU_STACK					\
+   && segment->p_type != PT_PAX_FLAGS					\
    && (segment->p_type != PT_TLS					\
        || (section->flags & SEC_THREAD_LOCAL))				\
    && (segment->p_type == PT_LOAD					\
diff -Nurp binutils-2.15.92.0.2/bfd/elflink.c binutils-2.15.92.0.2-pax/bfd/elflink.c
--- binutils-2.15.92.0.2/bfd/elflink.c	2004-09-27 22:46:06.000000000 +0200
+++ binutils-2.15.92.0.2-pax/bfd/elflink.c	2005-03-11 21:14:17.000000000 +0100
@@ -4665,17 +4665,31 @@ bfd_elf_size_dynamic_sections (bfd *outp
   if (!is_elf_hash_table (info->hash))
     return TRUE;
 
+  elf_tdata (output_bfd)->pax_flags = PF_NORANDEXEC;
+
+  if (info->execheap)
+    elf_tdata (output_bfd)->pax_flags |= PF_NOMPROTECT;
+  else if (info->noexecheap)
+    elf_tdata (output_bfd)->pax_flags |= PF_MPROTECT;
+
   elf_tdata (output_bfd)->relro = info->relro;
   if (info->execstack)
-    elf_tdata (output_bfd)->stack_flags = PF_R | PF_W | PF_X;
+    {
+      elf_tdata (output_bfd)->stack_flags = PF_R | PF_W | PF_X;
+      elf_tdata (output_bfd)->pax_flags |= PF_EMUTRAMP;
+    }
   else if (info->noexecstack)
-    elf_tdata (output_bfd)->stack_flags = PF_R | PF_W;
+    {
+      elf_tdata (output_bfd)->stack_flags = PF_R | PF_W;
+      elf_tdata (output_bfd)->pax_flags |= PF_NOEMUTRAMP;
+    }
   else
     {
       bfd *inputobj;
       asection *notesec = NULL;
       int exec = 0;
 
+      elf_tdata (output_bfd)->pax_flags |= PF_NOEMUTRAMP;
       for (inputobj = info->input_bfds;
 	   inputobj;
 	   inputobj = inputobj->link_next)
@@ -4688,7 +4702,11 @@ bfd_elf_size_dynamic_sections (bfd *outp
 	  if (s)
 	    {
 	      if (s->flags & SEC_CODE)
-		exec = PF_X;
+		{
+		  elf_tdata (output_bfd)->pax_flags &= ~PF_NOEMUTRAMP;
+		  elf_tdata (output_bfd)->pax_flags |= PF_EMUTRAMP;
+		  exec = PF_X;
+		}
 	      notesec = s;
 	    }
 	  else
diff -Nurp binutils-2.15.92.0.2/binutils/readelf.c binutils-2.15.92.0.2-pax/binutils/readelf.c
--- binutils-2.15.92.0.2/binutils/readelf.c	2004-09-27 22:46:07.000000000 +0200
+++ binutils-2.15.92.0.2-pax/binutils/readelf.c	2005-03-11 21:14:17.000000000 +0100
@@ -2264,6 +2264,7 @@ get_segment_type (unsigned long p_type)
 			return "GNU_EH_FRAME";
     case PT_GNU_STACK:	return "GNU_STACK";
     case PT_GNU_RELRO:  return "GNU_RELRO";
+    case PT_PAX_FLAGS:	return "PAX_FLAGS";
 
     default:
       if ((p_type >= PT_LOPROC) && (p_type <= PT_HIPROC))
diff -Nurp binutils-2.15.92.0.2/include/bfdlink.h binutils-2.15.92.0.2-pax/include/bfdlink.h
--- binutils-2.15.92.0.2/include/bfdlink.h	2004-09-27 22:46:07.000000000 +0200
+++ binutils-2.15.92.0.2-pax/include/bfdlink.h	2005-03-11 21:14:17.000000000 +0100
@@ -305,6 +305,14 @@ struct bfd_link_info
      flags.  */
   unsigned int noexecstack: 1;
 
+  /* TRUE if PT_PAX_FLAGS segment should be created with PF_NOMPROTECT
+     flags.  */
+  unsigned int execheap: 1;
+
+  /* TRUE if PT_PAX_FLAGS segment should be created with PF_MPROTECT
+     flags.  */
+  unsigned int noexecheap: 1;
+
   /* TRUE if PT_GNU_RELRO segment should be created.  */
   unsigned int relro: 1;
 
diff -Nurp binutils-2.15.92.0.2/include/elf/common.h binutils-2.15.92.0.2-pax/include/elf/common.h
--- binutils-2.15.92.0.2/include/elf/common.h	2004-07-28 06:36:10.000000000 +0200
+++ binutils-2.15.92.0.2-pax/include/elf/common.h	2005-03-11 21:14:17.000000000 +0100
@@ -292,12 +292,27 @@
 #define PT_GNU_EH_FRAME	(PT_LOOS + 0x474e550) /* Frame unwind information */
 #define PT_GNU_STACK	(PT_LOOS + 0x474e551) /* Stack flags */
 #define PT_GNU_RELRO	(PT_LOOS + 0x474e552) /* Read-only after relocation */
+#define PT_PAX_FLAGS	(PT_LOOS + 0x5041580) /* PaX flags */
 
 /* Program segment permissions, in program header p_flags field.  */
 
 #define PF_X		(1 << 0)	/* Segment is executable */
 #define PF_W		(1 << 1)	/* Segment is writable */
 #define PF_R		(1 << 2)	/* Segment is readable */
+
+#define PF_PAGEEXEC	(1 << 4)	/* Enable  PAGEEXEC */
+#define PF_NOPAGEEXEC	(1 << 5)	/* Disable PAGEEXEC */
+#define PF_SEGMEXEC	(1 << 6)	/* Enable  SEGMEXEC */
+#define PF_NOSEGMEXEC	(1 << 7)	/* Disable SEGMEXEC */
+#define PF_MPROTECT	(1 << 8)	/* Enable  MPROTECT */
+#define PF_NOMPROTECT	(1 << 9)	/* Disable MPROTECT */
+#define PF_RANDEXEC	(1 << 10)	/* Enable  RANDEXEC */
+#define PF_NORANDEXEC	(1 << 11)	/* Disable RANDEXEC */
+#define PF_EMUTRAMP	(1 << 12)	/* Enable  EMUTRAMP */
+#define PF_NOEMUTRAMP	(1 << 13)	/* Disable EMUTRAMP */
+#define PF_RANDMMAP	(1 << 14)	/* Enable  RANDMMAP */
+#define PF_NORANDMMAP	(1 << 15)	/* Disable RANDMMAP */
+
 /* #define PF_MASKOS	0x0F000000    *//* OS-specific reserved bits */
 #define PF_MASKOS	0x0FF00000	/* New value, Oct 4, 1999 Draft */
 #define PF_MASKPROC	0xF0000000	/* Processor-specific reserved bits */
diff -Nurp binutils-2.15.92.0.2/ld/emultempl/elf32.em binutils-2.15.92.0.2-pax/ld/emultempl/elf32.em
--- binutils-2.15.92.0.2/ld/emultempl/elf32.em	2004-07-28 06:36:11.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/emultempl/elf32.em	2005-03-11 21:14:17.000000000 +0100
@@ -1732,6 +1732,16 @@ cat >>e${EMULATION_NAME}.c <<EOF
 	  link_info.noexecstack = TRUE;
 	  link_info.execstack = FALSE;
 	}
+       else if (strcmp (optarg, "execheap") == 0)
+	{
+	  link_info.execheap = TRUE;
+	  link_info.noexecheap = FALSE;
+	}
+      else if (strcmp (optarg, "noexecheap") == 0)
+	{
+	  link_info.noexecheap = TRUE;
+	  link_info.execheap = FALSE;
+	}
       else if (strcmp (optarg, "relro") == 0)
 	link_info.relro = TRUE;
       else if (strcmp (optarg, "norelro") == 0)
@@ -1772,6 +1782,7 @@ cat >>e${EMULATION_NAME}.c <<EOF
   fprintf (file, _("  -z combreloc\t\tMerge dynamic relocs into one section and sort\n"));
   fprintf (file, _("  -z defs\t\tReport unresolved symbols in object files.\n"));
   fprintf (file, _("  -z execstack\t\tMark executable as requiring executable stack\n"));
+  fprintf (file, _("  -z execheap\t\tMark executable as requiring executable heap\n"));
   fprintf (file, _("  -z initfirst\t\tMark DSO to be initialized first at runtime\n"));
   fprintf (file, _("  -z interpose\t\tMark object to interpose all DSOs but executable\n"));
   fprintf (file, _("  -z loadfltr\t\tMark object requiring immediate process\n"));
@@ -1783,6 +1794,7 @@ cat >>e${EMULATION_NAME}.c <<EOF
   fprintf (file, _("  -z nodlopen\t\tMark DSO not available to dlopen\n"));
   fprintf (file, _("  -z nodump\t\tMark DSO not available to dldump\n"));
   fprintf (file, _("  -z noexecstack\tMark executable as not requiring executable stack\n"));
+  fprintf (file, _("  -z noexecheap\tMark executable as not requiring executable heap\n"));
   fprintf (file, _("  -z norelro\t\tDon't create RELRO program header\n"));
   fprintf (file, _("  -z now\t\tMark object non-lazy runtime binding\n"));
   fprintf (file, _("  -z origin\t\tMark object requiring immediate \$ORIGIN processing\n\t\t\t  at runtime\n"));
diff -Nurp binutils-2.15.92.0.2/ld/ldgram.y binutils-2.15.92.0.2-pax/ld/ldgram.y
--- binutils-2.15.92.0.2/ld/ldgram.y	2004-05-27 20:26:04.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/ldgram.y	2005-03-11 21:14:17.000000000 +0100
@@ -1028,6 +1028,8 @@ phdr_type:
 			    $$ = exp_intop (0x6474e550);
 			  else if (strcmp (s, "PT_GNU_STACK") == 0)
 			    $$ = exp_intop (0x6474e551);
+			  else if (strcmp (s, "PT_PAX_FLAGS") == 0)
+			    $$ = exp_intop (0x65041580);
 			  else
 			    {
 			      einfo (_("\
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-i386/tlsbin.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-i386/tlsbin.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-i386/tlsbin.rd	2004-09-27 22:46:07.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-i386/tlsbin.rd	2005-03-11 21:14:17.000000000 +0100
@@ -35,7 +35,7 @@ Key to Flags:
 
 Elf file type is EXEC \(Executable file\)
 Entry point 0x8049178
-There are 6 program headers, starting at offset [0-9]+
+There are 7 program headers, starting at offset [0-9]+
 
 Program Headers:
   Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
@@ -46,6 +46,7 @@ Program Headers:
   LOAD.*
   DYNAMIC.*
   TLS +0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ 0x0+60 0x0+a0 R +0x1000
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x4
 
  Section to Segment mapping:
   Segment Sections...
@@ -55,6 +56,7 @@ Program Headers:
    03 +.tdata .dynamic .got .got.plt *
    04 +.dynamic *
    05 +.tdata .tbss *
+   06 *
 
 Relocation section '.rel.dyn' at offset 0x[0-9a-f]+ contains 9 entries:
  Offset +Info +Type +Sym.Value +Sym. Name
@@ -68,7 +70,7 @@ Relocation section '.rel.dyn' at offset 
 0+804a11c  00000925 R_386_TLS_TPOFF32 0+ +sG1
 0+804a120  00000d0e R_386_TLS_TPOFF +0+ +sG8
 
-Relocation section '.rel.plt' at offset 0x30c contains 1 entries:
+Relocation section '.rel.plt' at offset 0x32c contains 1 entries:
  Offset +Info +Type +Sym.Value  Sym. Name
 0+804a130  00000e07 R_386_JUMP_SLOT +[0-9a-f]+ +___tls_get_addr
 
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-i386/tlsnopic.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-i386/tlsnopic.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-i386/tlsnopic.rd	2004-09-27 22:46:07.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-i386/tlsnopic.rd	2005-03-11 21:14:17.000000000 +0100
@@ -32,7 +32,7 @@ Key to Flags:
 
 Elf file type is DYN \(Shared object file\)
 Entry point 0x1000
-There are 4 program headers, starting at offset [0-9]+
+There are 5 program headers, starting at offset [0-9]+
 
 Program Headers:
   Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
@@ -40,6 +40,7 @@ Program Headers:
   LOAD.*
   DYNAMIC.*
   TLS +0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ 0x0+ 0x0+24 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x4
 
  Section to Segment mapping:
   Segment Sections...
@@ -47,6 +48,7 @@ Program Headers:
    01 +.dynamic .got .got.plt *
    02 +.dynamic *
    03 +.tbss *
+   04 *
 
 Relocation section '.rel.dyn' at offset 0x[0-9a-f]+ contains 20 entries:
  Offset +Info +Type +Sym.Value +Sym. Name
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-i386/tlspic.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-i386/tlspic.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-i386/tlspic.rd	2004-09-27 22:46:07.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-i386/tlspic.rd	2005-03-11 21:14:17.000000000 +0100
@@ -42,6 +42,7 @@ Program Headers:
   LOAD.*
   DYNAMIC.*
   TLS +0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ 0x0+60 0x0+80 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x4
 
  Section to Segment mapping:
   Segment Sections...
@@ -49,6 +50,7 @@ Program Headers:
    01 +.tdata .dynamic .got .got.plt *
    02 +.dynamic *
    03 +.tdata .tbss *
+   04 *
 
 Relocation section '.rel.dyn' at offset 0x[0-9a-f]+ contains 26 entries:
  Offset +Info +Type +Sym.Value +Sym. Name
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-ia64/tlsbin.dd binutils-2.15.92.0.2-pax/ld/testsuite/ld-ia64/tlsbin.dd
--- binutils-2.15.92.0.2/ld/testsuite/ld-ia64/tlsbin.dd	2004-01-14 22:07:54.000000000 +0100
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-ia64/tlsbin.dd	2005-03-11 21:14:32.000000000 +0100
@@ -18,25 +18,25 @@ Disassembly of section .text:
 40+101c:	81 0a 00 90[ 	]+addl r15=40,r1;;
 40+1020:	19 18 01 1c 18 10[ 	]+\[MMB\][ 	]+ld8 r35=\[r14\]
 40+1026:	40 02 3c 30 20 00[ 	]+ld8 r36=\[r15\]
-40+102c:	e8 f3 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
+40+102c:	28 f4 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
 40+1030:	0d 70 c0 02 00 24[ 	]+\[MFI\][ 	]+addl r14=48,r1
 40+1036:	00 00 00 02 00 e0[ 	]+nop.f 0x0
 40+103c:	01 0c 00 90[ 	]+addl r15=64,r1;;
 40+1040:	19 18 01 1c 18 10[ 	]+\[MMB\][ 	]+ld8 r35=\[r14\]
 40+1046:	40 02 3c 30 20 00[ 	]+ld8 r36=\[r15\]
-40+104c:	c8 f3 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
+40+104c:	08 f4 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
 40+1050:	0d 70 c0 02 00 24[ 	]+\[MFI\][ 	]+addl r14=48,r1
 40+1056:	00 00 00 02 00 80[ 	]+nop.f 0x0
 40+105c:	14 02 00 90[ 	]+mov r36=33;;
 40+1060:	1d 18 01 1c 18 10[ 	]+\[MFB\][ 	]+ld8 r35=\[r14\]
 40+1066:	00 00 00 02 00 00[ 	]+nop.f 0x0
-40+106c:	a8 f3 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
+40+106c:	e8 f3 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
 40+1070:	0d 70 c0 02 00 24[ 	]+\[MFI\][ 	]+addl r14=48,r1
 40+1076:	00 00 00 02 00 80[ 	]+nop.f 0x0
 40+107c:	04 00 00 84[ 	]+mov r36=r0;;
 40+1080:	1d 18 01 1c 18 10[ 	]+\[MFB\][ 	]+ld8 r35=\[r14\]
 40+1086:	00 00 00 02 00 00[ 	]+nop.f 0x0
-40+108c:	88 f3 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
+40+108c:	c8 f3 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
 40+1090:	0b 10 00 10 00 21[ 	]+\[MMI\][ 	]+mov r2=r8;;
 40+1096:	e0 00 0a 00 48 e0[ 	]+addl r14=64,r2
 40+109c:	61 14 00 90[ 	]+addl r15=70,r2;;
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-ia64/tlsbin.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-ia64/tlsbin.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-ia64/tlsbin.rd	2004-05-27 20:26:05.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-ia64/tlsbin.rd	2005-03-11 21:14:32.000000000 +0100
@@ -35,17 +35,18 @@ Section Headers:
 
 Elf file type is EXEC \(Executable file\)
 Entry point 0x40+10d0
-There are 7 program headers, starting at offset [0-9]+
+There are 8 program headers, starting at offset [0-9]+
 
 Program Headers:
   Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
-  PHDR +0x0+40 0x40+40 0x40+40 0x0+188 0x0+188 R E 0x8
-  INTERP +0x0+1c8 0x40+1c8 0x40+1c8 0x[0-9a-f]+ 0x[0-9a-f]+ R +0x1
+  PHDR +0x0+40 0x40+40 0x40+40 0x0+1c0 0x0+1c0 R E 0x8
+  INTERP +0x0+200 0x40+200 0x40+200 0x[0-9a-f]+ 0x[0-9a-f]+ R +0x1
 .*Requesting program interpreter.*
   LOAD +0x0+ 0x40+ 0x40+ 0x0+1170 0x0+1170 R E 0x10000
   LOAD +0x0+1170 0x60+1170 0x60+1170 0x0+ef0 0x0+ef0 RW +0x10000
   DYNAMIC +0x0+11d0 0x60+11d0 0x60+11d0 0x0+150 0x0+150 RW +0x8
   TLS +0x0+1170 0x60+1170 0x60+1170 0x0+60 0x0+a0 R +0x4
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x8
   IA_64_UNWIND .* R +0x8
 #...
 
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-ia64/tlspic.dd binutils-2.15.92.0.2-pax/ld/testsuite/ld-ia64/tlspic.dd
--- binutils-2.15.92.0.2/ld/testsuite/ld-ia64/tlspic.dd	2004-05-27 20:26:05.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-ia64/tlspic.dd	2005-03-11 21:14:32.000000000 +0100
@@ -18,25 +18,25 @@ Disassembly of section .text:
  +101c:	01 0a 00 90[ 	]+addl r15=32,r1;;
  +1020:	19 18 01 1c 18 10[ 	]+\[MMB\] +ld8 r35=\[r14\]
  +1026:	40 02 3c 30 20 00[ 	]+ld8 r36=\[r15\]
- +102c:	88 f5 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
+ +102c:	c8 f5 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
  +1030:	0d 70 c0 02 00 24[ 	]+\[MFI\] +addl r14=48,r1
  +1036:	00 00 00 02 00 e0[ 	]+nop.f 0x0
  +103c:	01 0c 00 90[ 	]+addl r15=64,r1;;
  +1040:	19 18 01 1c 18 10[ 	]+\[MMB\] +ld8 r35=\[r14\]
  +1046:	40 02 3c 30 20 00[ 	]+ld8 r36=\[r15\]
- +104c:	68 f5 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
+ +104c:	a8 f5 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
  +1050:	0d 70 c0 02 00 24[ 	]+\[MFI\] +addl r14=48,r1
  +1056:	00 00 00 02 00 80[ 	]+nop.f 0x0
  +105c:	14 02 00 90[ 	]+mov r36=33;;
  +1060:	1d 18 01 1c 18 10[ 	]+\[MFB\] +ld8 r35=\[r14\]
  +1066:	00 00 00 02 00 00[ 	]+nop.f 0x0
- +106c:	48 f5 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
+ +106c:	88 f5 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
  +1070:	0d 70 c0 02 00 24[ 	]+\[MFI\] +addl r14=48,r1
  +1076:	00 00 00 02 00 80[ 	]+nop.f 0x0
  +107c:	04 00 00 84[ 	]+mov r36=r0;;
  +1080:	1d 18 01 1c 18 10[ 	]+\[MFB\] +ld8 r35=\[r14\]
  +1086:	00 00 00 02 00 00[ 	]+nop.f 0x0
- +108c:	28 f5 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
+ +108c:	68 f5 ff 58[ 	]+br.call.sptk.many b0=[0-9a-f]+ <.*>;;
  +1090:	0b 10 00 10 00 21[ 	]+\[MMI\] +mov r2=r8;;
  +1096:	e0 00 0a 00 48 e0[ 	]+addl r14=64,r2
  +109c:	21 16 00 90[ 	]+addl r15=98,r2;;
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-ia64/tlspic.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-ia64/tlspic.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-ia64/tlspic.rd	2004-05-27 20:26:05.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-ia64/tlspic.rd	2005-03-11 21:14:32.000000000 +0100
@@ -35,7 +35,7 @@ Key to Flags:
 
 Elf file type is DYN \(Shared object file\)
 Entry point 0x1000
-There are 5 program headers, starting at offset [0-9]+
+There are 6 program headers, starting at offset [0-9]+
 
 Program Headers:
   Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
@@ -43,6 +43,7 @@ Program Headers:
   LOAD +0x0+1140 0x0+11140 0x0+11140 0x0+f20 0x0+f20 RW +0x10000
   DYNAMIC +0x0+11a0 0x0+111a0 0x0+111a0 0x0+140 0x0+140 RW +0x8
   TLS +0x0+1140 0x0+11140 0x0+11140 0x0+60 0x0+80 R +0x4
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x8
   IA_64_UNWIND +0x0+1128 0x0+1128 0x0+1128 0x0+18 0x0+18 R +0x8
 #...
 
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-s390/tlsbin.dd binutils-2.15.92.0.2-pax/ld/testsuite/ld-s390/tlsbin.dd
--- binutils-2.15.92.0.2/ld/testsuite/ld-s390/tlsbin.dd	2004-05-27 20:26:06.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-s390/tlsbin.dd	2005-03-11 21:14:35.000000000 +0100
@@ -151,7 +151,7 @@ Disassembly of section .text:
   +[0-9a-f]+:	90 6e f0 18       	stm	%r6,%r14,24\(%r15\)
   +[0-9a-f]+:	a7 d5 00 0c       	bras	%r13,[0-9a-f]+ <_start\+0x1c>
 # sG6@indntpoff
-  +[0-9a-f]+:	00 40 15 e4       	.long	0x004015e4
+  +[0-9a-f]+:	00 40 16 24       	.long	0x00401624
 # bg6@indntpoff
   +[0-9a-f]+:	ff ff ff d4       	.long	0xffffffd4
 # bl6@indntpoff
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-s390/tlsbin.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-s390/tlsbin.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-s390/tlsbin.rd	2004-09-27 22:46:07.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-s390/tlsbin.rd	2005-03-11 21:14:35.000000000 +0100
@@ -18,10 +18,10 @@ Section Headers:
   \[ 6\] .rela.plt +.*
   \[ 7\] .plt +.*
   \[ 8\] .text +PROGBITS +.*
-  \[ 9\] .tdata +PROGBITS +0+4014c0 0+4c0 0+60 00 WAT +0 +0 +32
-  \[10\] .tbss +NOBITS +0+401520 0+520 0+40 00 WAT +0 +0 +1
-  \[11\] .dynamic +DYNAMIC +0+401520 0+520 0+a0 08 +WA +4 +0 +4
-  \[12\] .got +PROGBITS +0+4015c0 0+5c0 0+2c 04 +WA +0 +0 +4
+  \[ 9\] .tdata +PROGBITS +0+401500 0+500 0+60 00 WAT +0 +0 +32
+  \[10\] .tbss +NOBITS +0+401560 0+560 0+40 00 WAT +0 +0 +1
+  \[11\] .dynamic +DYNAMIC +0+401560 0+560 0+a0 08 +WA +4 +0 +4
+  \[12\] .got +PROGBITS +0+401600 0+600 0+2c 04 +WA +0 +0 +4
   \[13\] .data +.*
   \[14\] .bss +.*
   \[15\] .shstrtab +.*
@@ -34,17 +34,18 @@ Key to Flags:
 
 Elf file type is EXEC \(Executable file\)
 Entry point 0x[0-9a-f]+
-There are 6 program headers, starting at offset [0-9]+
+There are 7 program headers, starting at offset [0-9]+
 
 Program Headers:
   Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
-  PHDR +0x0+34 0x0+400034 0x0+400034 0x0+c0 0x0+c0 R E 0x4
-  INTERP +0x0+f4 0x0+4000f4 0x0+4000f4 0x0+11 0x0+11 R +0x1
+  PHDR +0x0+34 0x0+400034 0x0+400034 0x0+e0 0x0+e0 R E 0x4
+  INTERP +0x0+114 0x0+400114 0x0+400114 0x0+11 0x0+11 R +0x1
 .*Requesting program interpreter.*
   LOAD +0x0+ 0x0+400000 0x0+400000 0x[0-9a-f]+ 0x[0-9a-f]+ R E 0x1000
-  LOAD +0x0+4c0 0x0+4014c0 0x0+4014c0 0x0+12c 0x0+12c RW  0x1000
-  DYNAMIC +0x0+520 0x0+401520 0x0+401520 0x0+a0 0x0+a0 RW  0x4
-  TLS +0x0+4c0 0x0+4014c0 0x0+4014c0 0x0+60 0x0+a0 R +0x20
+  LOAD +0x0+500 0x0+401500 0x0+401500 0x0+12c 0x0+12c RW  0x1000
+  DYNAMIC +0x0+560 0x0+401560 0x0+401560 0x0+a0 0x0+a0 RW  0x4
+  TLS +0x0+500 0x0+401500 0x0+401500 0x0+60 0x0+a0 R +0x20
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x4
 
  Section to Segment mapping:
   Segment Sections...
@@ -54,8 +55,9 @@ Program Headers:
    03 +.tdata .dynamic .got *
    04 +.dynamic *
    05 +.tdata .tbss *
+   06 *
 
-Relocation section '.rela.dyn' at offset 0x268 contains 4 entries:
+Relocation section '.rela.dyn' at offset 0x288 contains 4 entries:
  Offset +Info +Type +Sym.Value  Sym. Name \+ Addend
 [0-9a-f]+  0+138 R_390_TLS_TPOFF +0+ +sG3 \+ 0
 [0-9a-f]+  0+338 R_390_TLS_TPOFF +0+ +sG2 \+ 0
@@ -64,7 +66,7 @@ Relocation section '.rela.dyn' at offset
 
 Relocation section '.rela.plt' at offset 0x[0-9a-f]+ contains 1 entries:
  Offset +Info +Type +Sym.Value  Sym. Name \+ Addend
-[0-9a-f]+  0+40b R_390_JMP_SLOT +0+40+2c4 +__tls_get_offset \+ 0
+[0-9a-f]+  0+40b R_390_JMP_SLOT +0+40+2e4 +__tls_get_offset \+ 0
 
 Symbol table '.dynsym' contains 11 entries:
  +Num: +Value  Size Type +Bind +Vis +Ndx Name
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-s390/tlsbin_64.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-s390/tlsbin_64.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-s390/tlsbin_64.rd	2004-09-27 22:46:07.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-s390/tlsbin_64.rd	2005-03-11 22:05:56.000000000 +0100
@@ -18,10 +18,10 @@ Section Headers:
   \[ 6\] .rela.plt +.*
   \[ 7\] .plt +.*
   \[ 8\] .text +PROGBITS +.*
-  \[ 9\] .tdata +PROGBITS +0+80001720 0+720 0+60 00 WAT +0 +0 +32
-  \[10\] .tbss +NOBITS +0+80001780 0+780 0+40 00 WAT +0 +0 +1
-  \[11\] .dynamic +DYNAMIC +0+80001780 0+780 0+140 10 +WA +4 +0 +8
-  \[12\] .got +PROGBITS +0+800018c0 0+8c0 0+78 08 +WA +0 +0 +8
+  \[ 9\] .tdata +PROGBITS +0+80001760 0+760 0+60 00 WAT +0 +0 +32
+  \[10\] .tbss +NOBITS +0+800017c0 0+7c0 0+40 00 WAT +0 +0 +1
+  \[11\] .dynamic +DYNAMIC +0+800017c0 0+7c0 0+140 10 +WA +4 +0 +8
+  \[12\] .got +PROGBITS +0+80001900 0+900 0+78 08 +WA +0 +0 +8
   \[13\] .data +.*
   \[14\] .bss +.*
   \[15\] .shstrtab +.*
@@ -34,17 +34,18 @@ Key to Flags:
 
 Elf file type is EXEC \(Executable file\)
 Entry point 0x[0-9a-f]+
-There are 6 program headers, starting at offset [0-9]+
+There are 7 program headers, starting at offset [0-9]+
 
 Program Headers:
   Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
-  PHDR +0x0+40 0x0+80000040 0x0+80000040 0x0+150 0x0+150 R E 0x8
-  INTERP +0x0+190 0x0+80000190 0x0+80000190 0x0+11 0x0+11 R +0x1
+  PHDR +0x0+40 0x0+80000040 0x0+80000040 0x0+188 0x0+188 R E 0x8
+  INTERP +0x0+1c8 0x0+800001c8 0x0+800001c8 0x0+11 0x0+11 R +0x1
 .*Requesting program interpreter.*
-  LOAD +0x0+ 0x0+80000000 0x0+80000000 0x0+720 0x0+720 R E 0x1000
-  LOAD +0x0+720 0x0+80001720 0x0+80001720 0x0+218 0x0+218 RW  0x1000
-  DYNAMIC +0x0+780 0x0+80001780 0x0+80001780 0x0+140 0x0+140 RW  0x8
-  TLS +0x0+720 0x0+80001720 0x0+80001720 0x0+60 0x0+a0 R +0x20
+  LOAD +0x0+ 0x0+80000000 0x0+80000000 0x0+760 0x0+760 R E 0x1000
+  LOAD +0x0+760 0x0+80001760 0x0+80001760 0x0+218 0x0+218 RW  0x1000
+  DYNAMIC +0x0+7c0 0x0+800017c0 0x0+800017c0 0x0+140 0x0+140 RW  0x8
+  TLS +0x0+760 0x0+80001760 0x0+80001760 0x0+60 0x0+a0 R +0x20
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x8
 
  Section to Segment mapping:
   Segment Sections...
@@ -54,6 +55,7 @@ Program Headers:
    03 +.tdata .dynamic .got *
    04 +.dynamic *
    05 +.tdata .tbss *
+   06 *
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 4 entries:
  +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
@@ -62,9 +64,9 @@ Relocation section '.rela.dyn' at offset
 [0-9a-f]+ +0+60+38 R_390_TLS_TPOFF +0+ sG6 \+ 0
 [0-9a-f]+ +0+70+38 R_390_TLS_TPOFF +0+ sG1 \+ 0
 
-Relocation section '.rela.plt' at offset 0x40+ contains 1 entries:
+Relocation section '.rela.plt' at offset 0x438 contains 1 entries:
  +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
-[0-9a-f]+ +0+40+b R_390_JMP_SLOT +0+80+438 __tls_get_offset \+ 0
+[0-9a-f]+ +0+40+b R_390_JMP_SLOT +0+80+470 __tls_get_offset \+ 0
 
 Symbol table '.dynsym' contains 11 entries:
  +Num: +Value +Size Type +Bind +Vis +Ndx Name
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-s390/tlspic.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-s390/tlspic.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-s390/tlspic.rd	2004-09-27 22:46:07.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-s390/tlspic.rd	2005-03-11 21:14:35.000000000 +0100
@@ -33,7 +33,7 @@ Key to Flags:
 
 Elf file type is DYN \(Shared object file\)
 Entry point 0x[0-9a-f]+
-There are 4 program headers, starting at offset [0-9]+
+There are 5 program headers, starting at offset [0-9]+
 
 Program Headers:
   Type +Offset +VirtAddr +PhysAddr +FileSiz MemSiz  Flg Align
@@ -41,6 +41,7 @@ Program Headers:
   LOAD +0x0+600 0x0+1600 0x0+1600 0x00150 0x00150 RW  0x1000
   DYNAMIC +0x0+660 0x0+1660 0x0+1660 0x0+98 0x0+98 RW  0x4
   TLS +0x0+600 0x0+1600 0x0+1600 0x0+60 0x0+80 R +0x20
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x4
 
  Section to Segment mapping:
   Segment Sections...
@@ -48,6 +49,7 @@ Program Headers:
  +01 +.tdata .dynamic .got 
  +02 +.dynamic 
  +03 +.tdata .tbss 
+ +04 *
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 14 entries:
  Offset +Info +Type +Sym.Value  Sym. Name \+ Addend
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-s390/tlspic_64.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-s390/tlspic_64.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-s390/tlspic_64.rd	2004-09-27 22:46:07.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-s390/tlspic_64.rd	2005-03-11 22:05:56.000000000 +0100
@@ -17,10 +17,10 @@ Section Headers:
   \[ 5\] .rela.plt +.*
   \[ 6\] .plt +.*
   \[ 7\] .text +PROGBITS +.*
-  \[ 8\] .tdata +PROGBITS +0+1900 0+900 0+60 00 WAT +0 +0 +32
-  \[ 9\] .tbss +NOBITS +0+1960 0+960 0+20 00 WAT +0 +0 +1
-  \[10\] .dynamic +DYNAMIC +0+1960 0+960 0+130 10 +WA +3 +0 +8
-  \[11\] .got +PROGBITS +0+1a90 0+a90 0+b0 08 +WA +0 +0 +8
+  \[ 8\] .tdata +PROGBITS +0+1940 0+940 0+60 00 WAT +0 +0 +32
+  \[ 9\] .tbss +NOBITS +0+19a0 0+9a0 0+20 00 WAT +0 +0 +1
+  \[10\] .dynamic +DYNAMIC +0+19a0 0+9a0 0+130 10 +WA +3 +0 +8
+  \[11\] .got +PROGBITS +0+1ad0 0+ad0 0+b0 08 +WA +0 +0 +8
   \[12\] .data +.*
   \[13\] .bss +.*
   \[14\] .shstrtab +.*
@@ -33,14 +33,15 @@ Key to Flags:
 
 Elf file type is DYN \(Shared object file\)
 Entry point 0x[0-9a-f]+
-There are 4 program headers, starting at offset [0-9]+
+There are 5 program headers, starting at offset [0-9]+
 
 Program Headers:
   Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
   LOAD +0x0+ 0x0+ 0x0+ 0x[0-9a-f]+ 0x[0-9a-f]+ R E 0x1000
-  LOAD +0x0+900 0x0+1900 0x0+1900 0x0+240 0x0+240 RW +0x1000
-  DYNAMIC +0x0+960 0x0+1960 0x0+1960 0x0+130 0x0+130 RW +0x8
-  TLS +0x0+900 0x0+1900 0x0+1900 0x0+60 0x0+80 R +0x20
+  LOAD +0x0+940 0x0+1940 0x0+1940 0x0+240 0x0+240 RW +0x1000
+  DYNAMIC +0x0+9a0 0x0+19a0 0x0+19a0 0x0+130 0x0+130 RW +0x8
+  TLS +0x0+940 0x0+1940 0x0+1940 0x0+60 0x0+80 R +0x20
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x8
 
  Section to Segment mapping:
   Segment Sections...
@@ -48,6 +49,7 @@ Program Headers:
    01 +.tdata .dynamic .got *
    02 +.dynamic *
    03 +.tdata .tbss *
+   04 *
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 14 entries:
  +Offset +Info +Type +Symbol's Value  Symbol's Name \+ Addend
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-x86-64/tlsbin.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-x86-64/tlsbin.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-x86-64/tlsbin.rd	2004-09-27 22:46:08.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-x86-64/tlsbin.rd	2005-03-11 21:14:17.000000000 +0100
@@ -35,17 +35,18 @@ Key to Flags:
 
 Elf file type is EXEC \(Executable file\)
 Entry point 0x40113c
-There are 6 program headers, starting at offset [0-9]+
+There are 7 program headers, starting at offset [0-9]+
 
 Program Headers:
   Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
-  PHDR +0x0+40 0x0+400040 0x0+400040 0x0+150 0x0+150 R E 0x8
-  INTERP +0x0+190 0x0+400190 0x0+400190 0x0+f 0x0+f R +0x1
+  PHDR +0x0+40 0x0+400040 0x0+400040 0x0+188 0x0+188 R E 0x8
+  INTERP +0x0+1c8 0x0+4001c8 0x0+4001c8 0x0+f 0x0+f R +0x1
 .*Requesting program interpreter.*
   LOAD +0x0+ 0x0+400000 0x0+400000 0x0+122a 0x0+122a R E 0x100000
   LOAD +0x0+122a 0x0+50122a 0x0+50122a 0x0+dd6 0x0+dd6 RW  0x100000
   DYNAMIC +0x0+1290 0x0+501290 0x0+501290 0x0+140 0x0+140 RW  0x8
   TLS +0x0+122a 0x0+50122a 0x0+50122a 0x0+60 0x0+a0 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x8
 
  Section to Segment mapping:
   Segment Sections...
@@ -55,15 +56,16 @@ Program Headers:
    03 +.tdata .dynamic .got .got.plt *
    04 +.dynamic *
    05 +.tdata .tbss *
+   06 *
 
-Relocation section '.rela.dyn' at offset 0x358 contains 4 entries:
+Relocation section '.rela.dyn' at offset 0x390 contains 4 entries:
  +Offset +Info +Type +Symbol's Value  Symbol's Name \+ Addend
 0+5013d0  0+100000012 R_X86_64_TPOFF64 +0+ sG5 \+ 0
 0+5013d8  0+300000012 R_X86_64_TPOFF64 +0+ sG2 \+ 0
 0+5013e0  0+600000012 R_X86_64_TPOFF64 +0+ sG6 \+ 0
 0+5013e8  0+700000012 R_X86_64_TPOFF64 +0+ sG1 \+ 0
 
-Relocation section '.rela.plt' at offset 0x3b8 contains 1 entries:
+Relocation section '.rela.plt' at offset 0x3f0 contains 1 entries:
  +Offset +Info +Type +Symbol's Value  Symbol's Name \+ Addend
 0+[0-9a-f]+  0+400000007 R_X86_64_JUMP_SLOT +0+[0-9a-f]+ __tls_get_addr \+ 0
 
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-x86-64/tlspic.dd binutils-2.15.92.0.2-pax/ld/testsuite/ld-x86-64/tlspic.dd
--- binutils-2.15.92.0.2/ld/testsuite/ld-x86-64/tlspic.dd	2004-05-27 20:26:06.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-x86-64/tlspic.dd	2005-03-11 21:14:17.000000000 +0100
@@ -22,7 +22,7 @@ Disassembly of section .text:
 #				-> R_X86_64_DTPMOD64	sg1
  +1010:	66[ 	]+data16
  +1011:	66[ 	]+data16
- +1012:	48 e8 88 f5 ff ff[ 	]+rex64 callq  [0-9a-f]+ <.*>
+ +1012:	48 e8 c0 f5 ff ff[ 	]+rex64 callq  [0-9a-f]+ <.*>
 #				-> R_X86_64_JUMP_SLOT	__tls_get_addr
  +1018:	90[ 	]+nop *
  +1019:	90[ 	]+nop *
@@ -43,7 +43,7 @@ Disassembly of section .text:
 #				-> R_X86_64_DTPMOD64	[0 0x2000000000000000]
  +1038:	66[ 	]+data16
  +1039:	66[ 	]+data16
- +103a:	48 e8 60 f5 ff ff[ 	]+rex64 callq  [0-9a-f]+ <.*>
+ +103a:	48 e8 98 f5 ff ff[ 	]+rex64 callq  [0-9a-f]+ <.*>
 #				-> R_X86_64_JUMP_SLOT	__tls_get_addr
  +1040:	90[ 	]+nop *
  +1041:	90[ 	]+nop *
@@ -64,7 +64,7 @@ Disassembly of section .text:
 #				-> R_X86_64_DTPMOD64	[0 0x4000000000000000]
  +1060:	66[ 	]+data16
  +1061:	66[ 	]+data16
- +1062:	48 e8 38 f5 ff ff[ 	]+rex64 callq  [0-9a-f]+ <.*>
+ +1062:	48 e8 70 f5 ff ff[ 	]+rex64 callq  [0-9a-f]+ <.*>
 #				-> R_X86_64_JUMP_SLOT	__tls_get_addr
  +1068:	90[ 	]+nop *
  +1069:	90[ 	]+nop *
@@ -85,7 +85,7 @@ Disassembly of section .text:
 #				-> R_X86_64_DTPMOD64	[0 0x6000000000000000]
  +1088:	66[ 	]+data16
  +1089:	66[ 	]+data16
- +108a:	48 e8 10 f5 ff ff[ 	]+rex64 callq  [0-9a-f]+ <.*>
+ +108a:	48 e8 48 f5 ff ff[ 	]+rex64 callq  [0-9a-f]+ <.*>
 #				-> R_X86_64_JUMP_SLOT	__tls_get_addr
  +1090:	90[ 	]+nop *
  +1091:	90[ 	]+nop *
@@ -103,7 +103,7 @@ Disassembly of section .text:
 #  LD
  +10a8:	48 8d 3d b1 02 10 00[ 	]+lea    1049265\(%rip\),%rdi +# 101360 <.*>
 #				-> R_X86_64_DTPMOD64	[0 0x000000000000000]
- +10af:	e8 ec f4 ff ff[ 	]+callq  [0-9a-f]+ <.*>
+ +10af:	e8 24 f5 ff ff[ 	]+callq  [0-9a-f]+ <.*>
 #				-> R_X86_64_JUMP_SLOT	__tls_get_addr
  +10b4:	90[ 	]+nop *
  +10b5:	90[ 	]+nop *
@@ -118,7 +118,7 @@ Disassembly of section .text:
 #  LD against hidden and local variables
  +10ca:	48 8d 3d 8f 02 10 00[ 	]+lea    1049231\(%rip\),%rdi +# 101360 <.*>
 #				-> R_X86_64_DTPMOD64	[0 0x000000000000000]
- +10d1:	e8 ca f4 ff ff[ 	]+callq  [0-9a-f]+ <.*>
+ +10d1:	e8 02 f5 ff ff[ 	]+callq  [0-9a-f]+ <.*>
 #				-> R_X86_64_JUMP_SLOT	__tls_get_addr
  +10d6:	90[ 	]+nop *
  +10d7:	90[ 	]+nop *
@@ -133,7 +133,7 @@ Disassembly of section .text:
 #  LD against hidden but not local variables
  +10ec:	48 8d 3d 6d 02 10 00[ 	]+lea    1049197\(%rip\),%rdi +# 101360 <.*>
 #				-> R_X86_64_DTPMOD64	[0 0x000000000000000]
- +10f3:	e8 a8 f4 ff ff[ 	]+callq  [0-9a-f]+ <.*>
+ +10f3:	e8 e0 f4 ff ff[ 	]+callq  [0-9a-f]+ <.*>
 #				-> R_X86_64_JUMP_SLOT	__tls_get_addr
  +10f8:	90[ 	]+nop *
  +10f9:	90[ 	]+nop *
diff -Nurp binutils-2.15.92.0.2/ld/testsuite/ld-x86-64/tlspic.rd binutils-2.15.92.0.2-pax/ld/testsuite/ld-x86-64/tlspic.rd
--- binutils-2.15.92.0.2/ld/testsuite/ld-x86-64/tlspic.rd	2004-09-27 22:46:08.000000000 +0200
+++ binutils-2.15.92.0.2-pax/ld/testsuite/ld-x86-64/tlspic.rd	2005-03-11 21:14:17.000000000 +0100
@@ -34,7 +34,7 @@ Key to Flags:
 
 Elf file type is DYN \(Shared object file\)
 Entry point 0x1000
-There are 4 program headers, starting at offset [0-9]+
+There are 5 program headers, starting at offset [0-9]+
 
 Program Headers:
   Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
@@ -42,6 +42,7 @@ Program Headers:
   LOAD +0x0+11ac 0x0+1011ac 0x0+1011ac 0x0+e54 0x0+e54 RW +0x100000
   DYNAMIC +0x0+1210 0x0+101210 0x0+101210 0x0+130 0x0+130 RW +0x8
   TLS +0x0+11ac 0x0+1011ac 0x0+1011ac 0x0+60 0x0+80 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x8
 
  Section to Segment mapping:
   Segment Sections...
@@ -49,6 +50,7 @@ Program Headers:
    01 +.tdata .dynamic .got .got.plt *
    02 +.dynamic *
    03 +.tdata .tbss *
+   04 *
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 14 entries:
  +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
