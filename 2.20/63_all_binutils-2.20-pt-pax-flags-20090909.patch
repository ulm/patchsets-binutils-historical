http://pax.grsecurity.net/

--- binutils-2.20/bfd/elf-bfd.h
+++ binutils-2.20/bfd/elf-bfd.h
@@ -1527,6 +1527,9 @@ struct elf_obj_tdata
   /* Segment flags for the PT_GNU_STACK segment.  */
   unsigned int stack_flags;
 
+  /* Segment flags for the PT_PAX_FLAGS segment.  */
+  unsigned int pax_flags;
+
   /* Symbol version definitions in external objects.  */
   Elf_Internal_Verdef *verdef;
 
--- binutils-2.20/bfd/elf.c
+++ binutils-2.20/bfd/elf.c
@@ -1081,6 +1081,7 @@ get_segment_type (unsigned int p_type)
     case PT_GNU_EH_FRAME: pt = "EH_FRAME"; break;
     case PT_GNU_STACK: pt = "STACK"; break;
     case PT_GNU_RELRO: pt = "RELRO"; break;
+    case PT_PAX_FLAGS: pt = "PAX_FLAGS"; break;
     default: pt = NULL; break;
     }
   return pt;
@@ -2379,6 +2380,9 @@ bfd_section_from_phdr (bfd *abfd, Elf_Internal_Phdr *hdr, int index)
     case PT_GNU_RELRO:
       return _bfd_elf_make_section_from_phdr (abfd, hdr, index, "relro");
 
+    case PT_PAX_FLAGS:
+      return _bfd_elf_make_section_from_phdr (abfd, hdr, index, "pax_flags");
+
     default:
       /* Check for any processor-specific program segment types.  */
       bed = get_elf_backend_data (abfd);
@@ -3393,6 +3397,11 @@ get_program_header_size (bfd *abfd, struct bfd_link_info *info)
       ++segs;
     }
 
+    {
+      /* We need a PT_PAX_FLAGS segment.  */
+      ++segs;
+    }
+
   for (s = abfd->sections; s != NULL; s = s->next)
     {
       if ((s->flags & SEC_LOAD) != 0
@@ -3972,6 +3981,20 @@ _bfd_elf_map_sections_to_segments (bfd *abfd, struct bfd_link_info *info)
 	    }
 	}
 
+    {
+      amt = sizeof (struct elf_segment_map);
+      m = bfd_zalloc (abfd, amt);
+      if (m == NULL)
+	goto error_return;
+      m->next = NULL;
+      m->p_type = PT_PAX_FLAGS;
+      m->p_flags = elf_tdata (abfd)->pax_flags;
+      m->p_flags_valid = 1;
+
+      *pm = m;
+      pm = &m->next;
+    }
+
       free (sections);
       elf_tdata (abfd)->segment_map = mfirst;
     }
@@ -5176,7 +5199,8 @@ rewrite_elf_program_header (bfd *ibfd, bfd *obfd)
        6. PT_TLS segment includes only SHF_TLS sections.
        7. SHF_TLS sections are only in PT_TLS or PT_LOAD segments.
        8. PT_DYNAMIC should not contain empty sections at the beginning
-	  (with the possible exception of .dynamic).  */
+	  (with the possible exception of .dynamic).
+       9. PT_PAX_FLAGS segments do not include any sections.  */
 #define IS_SECTION_IN_INPUT_SEGMENT(section, segment, bed)		\
   ((((segment->p_paddr							\
       ? IS_CONTAINED_BY_LMA (section, segment, segment->p_paddr)	\
@@ -5184,6 +5208,7 @@ rewrite_elf_program_header (bfd *ibfd, bfd *obfd)
      && (section->flags & SEC_ALLOC) != 0)				\
     || IS_NOTE (segment, section))					\
    && segment->p_type != PT_GNU_STACK					\
+   && segment->p_type != PT_PAX_FLAGS					\
    && (segment->p_type != PT_TLS					\
        || (section->flags & SEC_THREAD_LOCAL))				\
    && (segment->p_type == PT_LOAD					\
--- binutils-2.20/bfd/elflink.c
+++ binutils-2.20/bfd/elflink.c
@@ -5465,16 +5465,30 @@ bfd_elf_size_dynamic_sections (bfd *output_bfd,
     return TRUE;
 
   bed = get_elf_backend_data (output_bfd);
+
+  elf_tdata (output_bfd)->pax_flags = PF_NORANDEXEC;
+  if (info->execheap)
+    elf_tdata (output_bfd)->pax_flags |= PF_NOMPROTECT;
+  else if (info->noexecheap)
+    elf_tdata (output_bfd)->pax_flags |= PF_MPROTECT;
+
   if (info->execstack)
-    elf_tdata (output_bfd)->stack_flags = PF_R | PF_W | PF_X;
+    {
+      elf_tdata (output_bfd)->stack_flags = PF_R | PF_W | PF_X;
+      elf_tdata (output_bfd)->pax_flags |= PF_EMUTRAMP;
+    }
   else if (info->noexecstack)
-    elf_tdata (output_bfd)->stack_flags = PF_R | PF_W;
+    {
+      elf_tdata (output_bfd)->stack_flags = PF_R | PF_W;
+      elf_tdata (output_bfd)->pax_flags |= PF_NOEMUTRAMP;
+    }
   else
     {
       bfd *inputobj;
       asection *notesec = NULL;
       int exec = 0;
 
+      elf_tdata (output_bfd)->pax_flags |= PF_NOEMUTRAMP;
       for (inputobj = info->input_bfds;
 	   inputobj;
 	   inputobj = inputobj->link_next)
@@ -5487,7 +5501,11 @@ bfd_elf_size_dynamic_sections (bfd *output_bfd,
 	  if (s)
 	    {
 	      if (s->flags & SEC_CODE)
-		exec = PF_X;
+		{
+		  elf_tdata (output_bfd)->pax_flags &= ~PF_NOEMUTRAMP;
+		  elf_tdata (output_bfd)->pax_flags |= PF_EMUTRAMP;
+		  exec = PF_X;
+		}
 	      notesec = s;
 	    }
 	  else if (bed->default_execstack)
--- binutils-2.20/binutils/readelf.c
+++ binutils-2.20/binutils/readelf.c
@@ -2556,6 +2556,7 @@ get_segment_type (unsigned long p_type)
 			return "GNU_EH_FRAME";
     case PT_GNU_STACK:	return "GNU_STACK";
     case PT_GNU_RELRO:  return "GNU_RELRO";
+    case PT_PAX_FLAGS:  return "PAX_FLAGS";
 
     default:
       if ((p_type >= PT_LOPROC) && (p_type <= PT_HIPROC))
--- binutils-2.20/include/bfdlink.h
+++ binutils-2.20/include/bfdlink.h
@@ -319,6 +319,14 @@ struct bfd_link_info
   /* TRUE if PT_GNU_RELRO segment should be created.  */
   unsigned int relro: 1;
 
+  /* TRUE if PT_PAX_FLAGS segment should be created with PF_NOMPROTECT
+     flags.  */
+  unsigned int execheap: 1;
+
+  /* TRUE if PT_PAX_FLAGS segment should be created with PF_MPROTECT
+     flags.  */
+  unsigned int noexecheap: 1;
+
   /* TRUE if we should warn when adding a DT_TEXTREL to a shared object.  */
   unsigned int warn_shared_textrel: 1;
 
--- binutils-2.20/include/elf/common.h
+++ binutils-2.20/include/elf/common.h
@@ -422,6 +422,7 @@
 #define PT_SUNW_EH_FRAME PT_GNU_EH_FRAME      /* Solaris uses the same value */
 #define PT_GNU_STACK	(PT_LOOS + 0x474e551) /* Stack flags */
 #define PT_GNU_RELRO	(PT_LOOS + 0x474e552) /* Read-only after relocation */
+#define PT_PAX_FLAGS	(PT_LOOS + 0x5041580) /* PaX flags */
 
 /* Program segment permissions, in program header p_flags field.  */
 
@@ -432,6 +433,21 @@
 #define PF_MASKOS	0x0FF00000	/* New value, Oct 4, 1999 Draft */
 #define PF_MASKPROC	0xF0000000	/* Processor-specific reserved bits */
 
+/* Flags to control PaX behavior.  */
+
+#define PF_PAGEEXEC	(1 << 4)	/* Enable  PAGEEXEC */
+#define PF_NOPAGEEXEC	(1 << 5)	/* Disable PAGEEXEC */
+#define PF_SEGMEXEC	(1 << 6)	/* Enable  SEGMEXEC */
+#define PF_NOSEGMEXEC	(1 << 7)	/* Disable SEGMEXEC */
+#define PF_MPROTECT	(1 << 8)	/* Enable  MPROTECT */
+#define PF_NOMPROTECT	(1 << 9)	/* Disable MPROTECT */
+#define PF_RANDEXEC	(1 << 10)	/* Enable  RANDEXEC */
+#define PF_NORANDEXEC	(1 << 11)	/* Disable RANDEXEC */
+#define PF_EMUTRAMP	(1 << 12)	/* Enable  EMUTRAMP */
+#define PF_NOEMUTRAMP	(1 << 13)	/* Disable EMUTRAMP */
+#define PF_RANDMMAP	(1 << 14)	/* Enable  RANDMMAP */
+#define PF_NORANDMMAP	(1 << 15)	/* Disable RANDMMAP */
+
 /* Values for section header, sh_type field.  */
 
 #define SHT_NULL	0		/* Section header table entry unused */
--- binutils-2.20/ld/emultempl/elf32.em
+++ binutils-2.20/ld/emultempl/elf32.em
@@ -2159,6 +2159,16 @@ fragment <<EOF
 	  link_info.noexecstack = TRUE;
 	  link_info.execstack = FALSE;
 	}
+      else if (strcmp (optarg, "execheap") == 0)
+	{
+	  link_info.execheap = TRUE;
+	  link_info.noexecheap = FALSE;
+	}
+      else if (strcmp (optarg, "noexecheap") == 0)
+	{
+	  link_info.noexecheap = TRUE;
+	  link_info.execheap = FALSE;
+	}
 EOF
 
   if test -n "$COMMONPAGESIZE"; then
@@ -2237,6 +2247,8 @@ fragment <<EOF
   fprintf (file, _("\
   -z execstack                Mark executable as requiring executable stack\n"));
   fprintf (file, _("\
+  -z execheap                 Mark executable as requiring executable heap\n"));
+  fprintf (file, _("\
   -z initfirst                Mark DSO to be initialized first at runtime\n"));
   fprintf (file, _("\
   -z interpose                Mark object to interpose all DSOs but executable\n"));
@@ -2260,6 +2272,8 @@ fragment <<EOF
   -z nodump                   Mark DSO not available to dldump\n"));
   fprintf (file, _("\
   -z noexecstack              Mark executable as not requiring executable stack\n"));
+  fprintf (file, _("\
+  -z noexecheap               Mark executable as not requiring executable heap\n"));
 EOF
 
   if test -n "$COMMONPAGESIZE"; then
--- binutils-2.20/ld/ldgram.y
+++ binutils-2.20/ld/ldgram.y
@@ -1116,6 +1116,8 @@ phdr_type:
 			    $$ = exp_intop (0x6474e550);
 			  else if (strcmp (s, "PT_GNU_STACK") == 0)
 			    $$ = exp_intop (0x6474e551);
+			  else if (strcmp (s, "PT_PAX_FLAGS") == 0)
+			    $$ = exp_intop (0x65041580);
 			  else
 			    {
 			      einfo (_("\
--- binutils-2.20/ld/testsuite/ld-elf/eh1.d
+++ binutils-2.20/ld/testsuite/ld-elf/eh1.d
@@ -22,11 +22,11 @@
   DW_CFA_nop
   DW_CFA_nop
 
-00000018 0000001c 0000001c FDE cie=00000000 pc=00400078..00400078
-  DW_CFA_advance_loc: 0 to 00400078
+00000018 0000001c 0000001c FDE cie=00000000 pc=([0-9a-f]+)..\1
+  DW_CFA_advance_loc: 0 to [0-9a-f]+
   DW_CFA_def_cfa_offset: 16
   DW_CFA_offset: r6 \(rbp\) at cfa-16
-  DW_CFA_advance_loc: 0 to 00400078
+  DW_CFA_advance_loc: 0 to [0-9a-f]+
   DW_CFA_def_cfa_register: r6 \(rbp\)
 
 00000038 ZERO terminator
--- binutils-2.20/ld/testsuite/ld-elf/eh2.d
+++ binutils-2.20/ld/testsuite/ld-elf/eh2.d
@@ -22,11 +22,11 @@
   DW_CFA_nop
   DW_CFA_nop
 
-00000018 0000001c 0000001c FDE cie=00000000 pc=00400078..00400078
-  DW_CFA_advance_loc: 0 to 00400078
+00000018 0000001c 0000001c FDE cie=00000000 pc=([0-9a-f]+)..\1
+  DW_CFA_advance_loc: 0 to [0-9a-f]+
   DW_CFA_def_cfa_offset: 16
   DW_CFA_offset: r6 \(rbp\) at cfa-16
-  DW_CFA_advance_loc: 0 to 00400078
+  DW_CFA_advance_loc: 0 to [0-9a-f]+
   DW_CFA_def_cfa_register: r6 \(rbp\)
 
 00000038 ZERO terminator
--- binutils-2.20/ld/testsuite/ld-elf/eh3.d
+++ binutils-2.20/ld/testsuite/ld-elf/eh3.d
@@ -22,11 +22,11 @@
   DW_CFA_nop
   DW_CFA_nop
 
-00000018 0000001c 0000001c FDE cie=00000000 pc=00400078..00400078
-  DW_CFA_advance_loc: 0 to 00400078
+00000018 0000001c 0000001c FDE cie=00000000 pc=([0-9a-f]+)..\1
+  DW_CFA_advance_loc: 0 to [0-9a-f]+
   DW_CFA_def_cfa_offset: 16
   DW_CFA_offset: r6 \(rbp\) at cfa-16
-  DW_CFA_advance_loc: 0 to 00400078
+  DW_CFA_advance_loc: 0 to [0-9a-f]+
   DW_CFA_def_cfa_register: r6 \(rbp\)
 
 00000038 ZERO terminator
--- binutils-2.20/ld/testsuite/ld-i386/tlsbindesc.rd
+++ binutils-2.20/ld/testsuite/ld-i386/tlsbindesc.rd
@@ -42,6 +42,7 @@
   LOAD.*
   DYNAMIC.*
   TLS +0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ 0x0+60 0x0+a0 R +0x1000
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 
  Section to Segment mapping:
   Segment Sections...
@@ -51,6 +52,7 @@
    03 +.tdata .dynamic .got .got.plt *
    04 +.dynamic *
    05 +.tdata .tbss *
+   06 +
 
 Relocation section '.rel.dyn' at offset 0x[0-9a-f]+ contains 9 entries:
  Offset +Info +Type +Sym.Value +Sym. Name
--- binutils-2.20/ld/testsuite/ld-i386/tlsbin.rd
+++ binutils-2.20/ld/testsuite/ld-i386/tlsbin.rd
@@ -44,6 +44,7 @@
   LOAD.*
   DYNAMIC.*
   TLS +0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ 0x0+60 0x0+a0 R +0x1000
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 
  Section to Segment mapping:
   Segment Sections...
@@ -53,6 +54,7 @@
    03 +.tdata .dynamic .got .got.plt *
    04 +.dynamic *
    05 +.tdata .tbss *
+   06 +
 
 Relocation section '.rel.dyn' at offset 0x[0-9a-f]+ contains 9 entries:
  Offset +Info +Type +Sym.Value +Sym. Name
--- binutils-2.20/ld/testsuite/ld-i386/tlsdesc.rd
+++ binutils-2.20/ld/testsuite/ld-i386/tlsdesc.rd
@@ -39,6 +39,7 @@
   LOAD.*
   DYNAMIC.*
   TLS +0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ 0x0+60 0x0+80 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 
  Section to Segment mapping:
   Segment Sections...
@@ -46,6 +47,7 @@
    01 +.tdata .dynamic .got .got.plt *
    02 +.dynamic *
    03 +.tdata .tbss *
+   04 +
 
 Relocation section '.rel.dyn' at offset 0x[0-9a-f]+ contains 20 entries:
  Offset +Info +Type +Sym.Value +Sym. Name
--- binutils-2.20/ld/testsuite/ld-i386/tlsdesc.sd
+++ binutils-2.20/ld/testsuite/ld-i386/tlsdesc.sd
@@ -14,7 +14,7 @@
  [0-9a-f]+ 6c000000 b4ffffff 4c000000 68000000  .*
  [0-9a-f]+ 50000000 70000000 00000000 bcffffff  .*
 Contents of section \.got\.plt:
- [0-9a-f]+ b0150000 00000000 00000000 00000000  .*
+ [0-9a-f]+ [a-f]0150000 00000000 00000000 00000000  .*
  [0-9a-f]+ 20000000 00000000 60000000 00000000  .*
  [0-9a-f]+ 00000000 00000000 00000000 00000000  .*
  [0-9a-f]+ 40000000 +.*
--- binutils-2.20/ld/testsuite/ld-i386/tlsgdesc.rd
+++ binutils-2.20/ld/testsuite/ld-i386/tlsgdesc.rd
@@ -36,12 +36,14 @@
   LOAD.*
   LOAD.*
   DYNAMIC.*
+  PAX_FLAGS.*
 
  Section to Segment mapping:
   Segment Sections...
    00 +.hash .dynsym .dynstr .rel.dyn .rel.plt .plt .text *
    01 +.dynamic .got .got.plt *
    02 +.dynamic *
+   03 +
 
 Relocation section '.rel.dyn' at offset 0x[0-9a-f]+ contains 8 entries:
  Offset +Info +Type +Sym.Value +Sym. Name
--- binutils-2.20/ld/testsuite/ld-i386/tlsnopic.rd
+++ binutils-2.20/ld/testsuite/ld-i386/tlsnopic.rd
@@ -37,6 +37,7 @@
   LOAD.*
   DYNAMIC.*
   TLS +0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ 0x0+ 0x0+24 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 
  Section to Segment mapping:
   Segment Sections...
@@ -44,6 +45,7 @@
    01 +.dynamic .got .got.plt *
    02 +.dynamic *
    03 +.tbss *
+   04 +
 
 Relocation section '.rel.dyn' at offset 0x[0-9a-f]+ contains 20 entries:
  Offset +Info +Type +Sym.Value +Sym. Name
--- binutils-2.20/ld/testsuite/ld-i386/tlspic.rd
+++ binutils-2.20/ld/testsuite/ld-i386/tlspic.rd
@@ -40,6 +40,7 @@
   LOAD.*
   DYNAMIC.*
   TLS +0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ 0x0+60 0x0+80 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 
  Section to Segment mapping:
   Segment Sections...
@@ -47,6 +48,7 @@
    01 +.tdata .dynamic .got .got.plt *
    02 +.dynamic *
    03 +.tdata .tbss *
+   04 +
 
 Relocation section '.rel.dyn' at offset 0x[0-9a-f]+ contains 26 entries:
  Offset +Info +Type +Sym.Value +Sym. Name
--- binutils-2.20/ld/testsuite/ld-scripts/empty-aligned.d
+++ binutils-2.20/ld/testsuite/ld-scripts/empty-aligned.d
@@ -8,7 +8,9 @@
 Program Headers:
  +Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg +Align
  +LOAD +0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ 0x[0-9a-f]+ [RWE ]+ +0x[0-9a-f]+
+ +PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 
  Section to Segment mapping:
  +Segment Sections\.\.\.
  +00 +.text 
+ +01 +
--- binutils-2.20/ld/testsuite/ld-sparc/gotop32.rd
+++ binutils-2.20/testsuite/ld-sparc/gotop32.rd
@@ -31,6 +31,7 @@
  +LOAD +0x0+ 0x0+ 0x0+ 0x0+2000 0x0+2000 R E 0x10000
  +LOAD +0x0+2000 0x0+12000 0x0+12000 0x0+2000 0x0+2000 RW +0x10000
  +DYNAMIC +0x0+2000 0x0+12000 0x0+12000 0x0+70 0x0+70 RW +0x4
+ +PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 #...
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 1 entries:
--- binutils-2.20/ld/testsuite/ld-sparc/gotop64.rd
+++ binutils-2.20/testsuite/ld-sparc/gotop64.rd
@@ -31,6 +31,7 @@
  +LOAD +0x0+ 0x0+ 0x0+ 0x0+2000 0x0+2000 R E 0x100000
  +LOAD +0x0+2000 0x0+102000 0x0+102000 0x0+2000 0x0+2000 RW +0x100000
  +DYNAMIC +0x0+2000 0x0+102000 0x0+102000 0x0+e0 0x0+e0 RW +0x8
+ +PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 #...
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 1 entries:
--- binutils-2.20/ld/testsuite/ld-sparc/tlssunbin32.rd
+++ binutils-2.20/testsuite/ld-sparc/tlssunbin32.rd
@@ -30,13 +30,14 @@
 
 Program Headers:
  +Type +Offset +VirtAddr +PhysAddr +FileSiz MemSiz +Flg Align
- +PHDR +0x0+34 0x0+10034 0x0+10034 0x0+c0 0x0+c0 R E 0x4
- +INTERP +0x0+f4 0x0+100f4 0x0+100f4 0x0+11 0x0+11 R +0x1
+ +PHDR +0x0+34 0x0+10034 0x0+10034 (0x[0-9a-f]+) \1 R E 0x4
+ +INTERP +(0x[0-9a-f]+ ){3}0x0+11 0x0+11 R +0x1
 .*Requesting program interpreter.*
  +LOAD .* R E 0x10000
  +LOAD .* RW +0x10000
  +DYNAMIC .* RW +0x4
  +TLS .* 0x0+1060 0x0+10a0 R +0x4
+ +PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 #...
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 4 entries:
--- binutils-2.20/ld/testsuite/ld-sparc/tlssunbin64.rd
+++ binutils-2.20/testsuite/ld-sparc/tlssunbin64.rd
@@ -30,13 +30,14 @@
 
 Program Headers:
  +Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align
- +PHDR +0x0+40 0x0+100040 0x0+100040 0x0+150 0x0+150 R E 0x8
- +INTERP +0x0+190 0x0+100190 0x0+100190 0x0+19 0x0+19 R +0x1
+ +PHDR +0x0+40 0x0+100040 0x0+100040 (0x[0-9a-f]+) \1 R E 0x8
+ +INTERP +0x0+([0-9a-f]+) (0x0+10+\1) \2 0x0+19 0x0+19 R +0x1
 .*Requesting program interpreter.*
  +LOAD .* R E 0x100000
  +LOAD .* RW +0x100000
  +DYNAMIC .* RW +0x8
  +TLS .* 0x0+60 0x0+a0 R +0x4
+ +PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 #...
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 4 entries:
--- binutils-2.20/ld/testsuite/ld-sparc/tlssunnopic32.rd
+++ binutils-2.20/testsuite/ld-sparc/tlssunnopic32.rd
@@ -32,6 +32,7 @@
  +LOAD .* RW +0x10000
  +DYNAMIC .* RW +0x4
  +TLS .* 0x0+ 0x0+24 R +0x4
+ +PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 #...
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 12 entries:
--- binutils-2.20/ld/testsuite/ld-sparc/tlssunnopic64.rd
+++ binutils-2.20/testsuite/ld-sparc/tlssunnopic64.rd
@@ -32,6 +32,7 @@
  +LOAD .* RW +0x100000
  +DYNAMIC .* RW +0x8
  +TLS .* 0x0+ 0x0+24 R +0x4
+ +PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 #...
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 14 entries:
--- binutils-2.20/ld/testsuite/ld-sparc/tlssunpic32.rd
+++ binutils-2.20/testsuite/ld-sparc/tlssunpic32.rd
@@ -36,6 +36,7 @@
  +LOAD +0x0+2000 0x0+12000 0x0+12000 0x0+184 0x0+184 RWE 0x10000
  +DYNAMIC +0x0+2060 0x0+12060 0x0+12060 0x0+98 0x0+98 RW +0x4
  +TLS +0x0+2000 0x0+12000 0x0+12000 0x0+60 0x0+80 R +0x4
+ +PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 #...
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 14 entries:
--- binutils-2.20/ld/testsuite/ld-sparc/tlssunpic64.rd
+++ binutils-2.20/testsuite/ld-sparc/tlssunpic64.rd
@@ -36,6 +36,7 @@
  +LOAD +0x0+2000 0x0+102000 0x0+102000 0x0+3a0 0x0+3a0 RWE 0x100000
  +DYNAMIC +0x0+2060 0x0+102060 0x0+102060 0x0+130 0x0+130 RW +0x8
  +TLS +0x0+2000 0x0+102000 0x0+102000 0x0+60 0x0+80 R +0x4
+ +PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 #...
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 14 entries:
--- binutils-2.20/ld/testsuite/ld-x86-64/tlsbindesc.rd
+++ binutils-2.20/ld/testsuite/ld-x86-64/tlsbindesc.rd
@@ -42,6 +42,7 @@
   LOAD +0x0+11f6 0x0+6011f6 0x0+6011f6 0x0+19a 0x0+19a RW  0x200000
   DYNAMIC +0x0+1258 0x0+601258 0x0+601258 0x0+100 0x0+100 RW  0x8
   TLS +0x0+11f6 0x0+6011f6 0x0+6011f6 0x0+60 0x0+a0 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 
  Section to Segment mapping:
   Segment Sections...
@@ -51,6 +52,7 @@
    03 +.tdata .dynamic .got .got.plt *
    04 +.dynamic *
    05 +.tdata .tbss *
+   06 +
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 4 entries:
  +Offset +Info +Type +Symbol's Value  Symbol's Name \+ Addend
--- binutils-2.20/ld/testsuite/ld-x86-64/tlsbin.rd
+++ binutils-2.20/ld/testsuite/ld-x86-64/tlsbin.rd
@@ -44,6 +44,7 @@
   LOAD +0x0+122a 0x0+60122a 0x0+60122a 0x0+1e6 0x0+1e6 RW  0x200000
   DYNAMIC +0x0+1290 0x0+601290 0x0+601290 0x0+140 0x0+140 RW  0x8
   TLS +0x0+122a 0x0+60122a 0x0+60122a 0x0+60 0x0+a0 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 
  Section to Segment mapping:
   Segment Sections...
@@ -53,6 +54,7 @@
    03 +.tdata .dynamic .got .got.plt *
    04 +.dynamic *
    05 +.tdata .tbss *
+   06 +
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 4 entries:
  +Offset +Info +Type +Symbol's Value  Symbol's Name \+ Addend
--- binutils-2.20/ld/testsuite/ld-x86-64/tlsdesc.rd
+++ binutils-2.20/ld/testsuite/ld-x86-64/tlsdesc.rd
@@ -15,7 +15,7 @@
  +\[[ 0-9]+\] .dynstr +.*
  +\[[ 0-9]+\] .rela.dyn +.*
  +\[[ 0-9]+\] .rela.plt +.*
- +\[[ 0-9]+\] .plt +PROGBITS +0+450 0+450 0+20 10 +AX +0 +0 +4
+ +\[[ 0-9]+\] .plt +PROGBITS +0+488 0+488 0+20 10 +AX +0 +0 +4
  +\[[ 0-9]+\] .text +PROGBITS +0+1000 0+1000 0+154 00 +AX +0 +0 4096
  +\[[ 0-9]+\] .tdata +PROGBITS +0+201154 0+1154 0+60 00 WAT +0 +0 +1
  +\[[ 0-9]+\] .tbss +NOBITS +0+2011b4 0+11b4 0+20 00 WAT +0 +0 +1
@@ -40,6 +40,7 @@
   LOAD +0x0+1154 0x0+201154 0x0+201154 0x0+264 0x0+264 RW +0x200000
   DYNAMIC +0x0+11b8 0x0+2011b8 0x0+2011b8 0x0+150 0x0+150 RW +0x8
   TLS +0x0+1154 0x0+201154 0x0+201154 0x0+60 0x0+80 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 
  Section to Segment mapping:
   Segment Sections...
@@ -47,6 +48,7 @@
    01 +.tdata .dynamic .got .got.plt *
    02 +.dynamic *
    03 +.tdata .tbss *
+   04 +
 
 Dynamic section at offset 0x[0-9a-f]+ contains 16 entries:
  +Tag +Type +Name/Value
@@ -59,7 +61,7 @@
  0x[0-9a-f]+ +\(PLTRELSZ\).*
  0x[0-9a-f]+ +\(PLTREL\).*
  0x[0-9a-f]+ +\(JMPREL\).*
- 0x[0-9a-f]+ +\(TLSDESC_PLT\) +0x460
+ 0x[0-9a-f]+ +\(TLSDESC_PLT\) +0x498
  0x[0-9a-f]+ +\(TLSDESC_GOT\) +0x201348
  0x[0-9a-f]+ +\(RELA\).*
  0x[0-9a-f]+ +\(RELASZ\).*
--- binutils-2.20/ld/testsuite/ld-x86-64/tlsgdesc.dd
+++ binutils-2.20/ld/testsuite/ld-x86-64/tlsgdesc.dd
@@ -20,7 +20,7 @@
  +[0-9a-f]+:	00 00 *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
- +[0-9a-f]+:	48 03 0d 5e 02 20 00[ 	]+add    0x20025e\(%rip\),%rcx +# 200660 <.*>
+ +[0-9a-f]+:	48 03 0d 5e 02 20 00[ 	]+add    0x20025e\(%rip\),%rcx +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG3
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
@@ -31,14 +31,14 @@
  +[0-9a-f]+:	00 00 *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
- +[0-9a-f]+:	48 03 0d 68 02 20 00[ 	]+add    0x200268\(%rip\),%rcx +# 200680 <.*>
+ +[0-9a-f]+:	48 03 0d 68 02 20 00[ 	]+add    0x200268\(%rip\),%rcx +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG4
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
 # GD, gd first
- +[0-9a-f]+:	66 48 8d 3d 6c 02 20[ 	]+lea    0x20026c\(%rip\),%rdi +# 200690 <.*>
+ +[0-9a-f]+:	66 48 8d 3d 6c 02 20[ 	]+lea    0x20026c\(%rip\),%rdi +# 200[0-9a-f]{3} <.*>
  +[0-9a-f]+:	00 *
 #				-> R_X86_64_DTPMOD64	sG1
  +[0-9a-f]+:	66 66 48 e8 9c ff ff[ 	]+callq  [0-9a-f]+ <.*>
@@ -48,7 +48,7 @@
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
- +[0-9a-f]+:	48 8d 05 a1 02 20 00[ 	]+lea    0x2002a1\(%rip\),%rax +# 2006d8 <.*>
+ +[0-9a-f]+:	48 8d 05 a1 02 20 00[ 	]+lea    0x2002a1\(%rip\),%rax +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TLSDESC	sG1
  +[0-9a-f]+:	ff 10[ 	]+callq  \*\(%rax\)
  +[0-9a-f]+:	90[ 	]+nop *
@@ -56,14 +56,14 @@
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
 # GD, desc first
- +[0-9a-f]+:	48 8d 05 84 02 20 00[ 	]+lea    0x200284\(%rip\),%rax +# 2006c8 <.*>
+ +[0-9a-f]+:	48 8d 05 84 02 20 00[ 	]+lea    0x200284\(%rip\),%rax +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TLSDESC	sG2
  +[0-9a-f]+:	ff 10[ 	]+callq  \*\(%rax\)
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
- +[0-9a-f]+:	66 48 8d 3d 1e 02 20[ 	]+lea    0x20021e\(%rip\),%rdi +# 200670 <.*>
+ +[0-9a-f]+:	66 48 8d 3d 1e 02 20[ 	]+lea    0x20021e\(%rip\),%rdi +# 200[0-9a-f]{3} <.*>
  +[0-9a-f]+:	00 *
 #				-> R_X86_64_DTPMOD64	sG2
  +[0-9a-f]+:	66 66 48 e8 6e ff ff[ 	]+callq  [0-9a-f]+ <.*>
@@ -76,13 +76,13 @@
 # GD -> IE, gd first, after IE use
  +[0-9a-f]+:	64 48 8b 04 25 00 00[ 	]+mov    %fs:0x0,%rax
  +[0-9a-f]+:	00 00 *
- +[0-9a-f]+:	48 03 05 f2 01 20 00[ 	]+add    0x2001f2\(%rip\),%rax +# 200660 <.*>
+ +[0-9a-f]+:	48 03 05 f2 01 20 00[ 	]+add    0x2001f2\(%rip\),%rax +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG3
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
- +[0-9a-f]+:	48 8b 05 e7 01 20 00[ 	]+mov    0x2001e7\(%rip\),%rax +# 200660 <.*>
+ +[0-9a-f]+:	48 8b 05 e7 01 20 00[ 	]+mov    0x2001e7\(%rip\),%rax +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG3
  +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
  +[0-9a-f]+:	90[ 	]+nop *
@@ -90,7 +90,7 @@
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
 # GD -> IE, desc first, after IE use
- +[0-9a-f]+:	48 8b 05 fa 01 20 00[ 	]+mov    0x2001fa\(%rip\),%rax +# 200680 <.*>
+ +[0-9a-f]+:	48 8b 05 fa 01 20 00[ 	]+mov    0x2001fa\(%rip\),%rax +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG4
  +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
  +[0-9a-f]+:	90[ 	]+nop *
@@ -99,7 +99,7 @@
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	64 48 8b 04 25 00 00[ 	]+mov    %fs:0x0,%rax
  +[0-9a-f]+:	00 00 *
- +[0-9a-f]+:	48 03 05 e4 01 20 00[ 	]+add    0x2001e4\(%rip\),%rax +# 200680 <.*>
+ +[0-9a-f]+:	48 03 05 e4 01 20 00[ 	]+add    0x2001e4\(%rip\),%rax +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG4
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
@@ -108,13 +108,13 @@
 # GD -> IE, gd first, before IE use
  +[0-9a-f]+:	64 48 8b 04 25 00 00[ 	]+mov    %fs:0x0,%rax
  +[0-9a-f]+:	00 00 *
- +[0-9a-f]+:	48 03 05 b8 01 20 00[ 	]+add    0x2001b8\(%rip\),%rax +# 200668 <.*>
+ +[0-9a-f]+:	48 03 05 b8 01 20 00[ 	]+add    0x2001b8\(%rip\),%rax +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG5
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
- +[0-9a-f]+:	48 8b 05 ad 01 20 00[ 	]+mov    0x2001ad\(%rip\),%rax +# 200668 <.*>
+ +[0-9a-f]+:	48 8b 05 ad 01 20 00[ 	]+mov    0x2001ad\(%rip\),%rax +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG5
  +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
  +[0-9a-f]+:	90[ 	]+nop *
@@ -122,7 +122,7 @@
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
 # GD -> IE, desc first, before IE use
- +[0-9a-f]+:	48 8b 05 c0 01 20 00[ 	]+mov    0x2001c0\(%rip\),%rax +# 200688 <.*>
+ +[0-9a-f]+:	48 8b 05 c0 01 20 00[ 	]+mov    0x2001c0\(%rip\),%rax +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG6
  +[0-9a-f]+:	66 90[ 	]+xchg   %ax,%ax
  +[0-9a-f]+:	90[ 	]+nop *
@@ -131,7 +131,7 @@
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	64 48 8b 04 25 00 00[ 	]+mov    %fs:0x0,%rax
  +[0-9a-f]+:	00 00 *
- +[0-9a-f]+:	48 03 05 aa 01 20 00[ 	]+add    0x2001aa\(%rip\),%rax +# 200688 <.*>
+ +[0-9a-f]+:	48 03 05 aa 01 20 00[ 	]+add    0x2001aa\(%rip\),%rax +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG6
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
@@ -142,7 +142,7 @@
  +[0-9a-f]+:	00 00 *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
- +[0-9a-f]+:	48 03 0d 74 01 20 00[ 	]+add    0x200174\(%rip\),%rcx +# 200668 <.*>
+ +[0-9a-f]+:	48 03 0d 74 01 20 00[ 	]+add    0x200174\(%rip\),%rcx +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG5
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
@@ -153,7 +153,7 @@
  +[0-9a-f]+:	00 00 *
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
- +[0-9a-f]+:	48 03 0d 7e 01 20 00[ 	]+add    0x20017e\(%rip\),%rcx +# 200688 <.*>
+ +[0-9a-f]+:	48 03 0d 7e 01 20 00[ 	]+add    0x20017e\(%rip\),%rcx +# 200[0-9a-f]{3} <.*>
 #				-> R_X86_64_TPOFF64	sG6
  +[0-9a-f]+:	90[ 	]+nop *
  +[0-9a-f]+:	90[ 	]+nop *
--- binutils-2.20/ld/testsuite/ld-x86-64/tlsgdesc.rd
+++ binutils-2.20/ld/testsuite/ld-x86-64/tlsgdesc.rd
@@ -36,12 +36,14 @@
   LOAD.*
   LOAD.*
   DYNAMIC.*
+  PAX_FLAGS.*
 
  Section to Segment mapping:
   Segment Sections...
    00 +.hash .dynsym .dynstr .rela.dyn .rela.plt .plt .text *
    01 +.dynamic .got .got.plt *
    02 +.dynamic *
+   03 +
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 8 entries:
  +Offset +Info +Type +Symbol's Value  Symbol's Name \+ Addend
--- binutils-2.20/ld/testsuite/ld-x86-64/tlspic.rd
+++ binutils-2.20/ld/testsuite/ld-x86-64/tlspic.rd
@@ -40,6 +40,7 @@
   LOAD +0x0+11ac 0x0+2011ac 0x0+2011ac 0x0+244 0x0+244 RW +0x200000
   DYNAMIC +0x0+1210 0x0+201210 0x0+201210 0x0+130 0x0+130 RW +0x8
   TLS +0x0+11ac 0x0+2011ac 0x0+2011ac 0x0+60 0x0+80 R +0x1
+  PAX_FLAGS +0x0+ 0x0+ 0x0+ 0x0+ 0x0+ +0x[48]
 
  Section to Segment mapping:
   Segment Sections...
@@ -47,6 +48,7 @@
    01 +.tdata .dynamic .got .got.plt *
    02 +.dynamic *
    03 +.tdata .tbss *
+   04 +
 
 Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 14 entries:
  +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
