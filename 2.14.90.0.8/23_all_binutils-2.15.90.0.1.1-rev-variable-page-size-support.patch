diff -Naurp binutils-2.15.90.0.1.1.orig/bfd/elf32-mips.c binutils-2.15.90.0.1.1/bfd/elf32-mips.c
--- binutils-2.15.90.0.1.1.orig/bfd/elf32-mips.c	2004-01-14 16:07:43.000000000 -0500
+++ binutils-2.15.90.0.1.1/bfd/elf32-mips.c	2004-03-10 00:29:34.392478000 -0500
@@ -1513,6 +1513,10 @@ static const struct ecoff_debug_swap mip
 #define ELF_ARCH			bfd_arch_mips
 #define ELF_MACHINE_CODE		EM_MIPS
 
+/* The SVR4 MIPS ABI says that this should be 0x10000, but Irix 5 uses
+   a value of 0x1000, and we are compatible.  */
+#define ELF_MAXPAGESIZE			0x1000
+
 #define elf_backend_collect		TRUE
 #define elf_backend_type_change_ok	TRUE
 #define elf_backend_can_gc_sections	TRUE
@@ -1590,29 +1594,20 @@ static const struct ecoff_debug_swap mip
 #define TARGET_BIG_SYM			bfd_elf32_bigmips_vec
 #define TARGET_BIG_NAME			"elf32-bigmips"
 
-/* The SVR4 MIPS ABI says that this should be 0x10000, but Irix 5 uses
-   a value of 0x1000, and we are compatible.  */
-#define ELF_MAXPAGESIZE			0x1000
-
 #include "elf32-target.h"
 
 /* Support for traditional mips targets.  */
+#define INCLUDED_TARGET_FILE            /* More a type of flag.  */
+
 #undef TARGET_LITTLE_SYM
 #undef TARGET_LITTLE_NAME
 #undef TARGET_BIG_SYM
 #undef TARGET_BIG_NAME
 
-#undef ELF_MAXPAGESIZE
-
 #define TARGET_LITTLE_SYM               bfd_elf32_tradlittlemips_vec
 #define TARGET_LITTLE_NAME              "elf32-tradlittlemips"
 #define TARGET_BIG_SYM                  bfd_elf32_tradbigmips_vec
 #define TARGET_BIG_NAME                 "elf32-tradbigmips"
 
-/* The SVR4 MIPS ABI says that this should be 0x10000, and Linux uses
-   page sizes of up to that limit, so we need to respect it.  */
-#define ELF_MAXPAGESIZE			0x10000
-#define elf32_bed			elf32_tradbed
-
 /* Include the target file again for this target.  */
 #include "elf32-target.h"
diff -Naurp binutils-2.15.90.0.1.1.orig/bfd/elf64-mips.c binutils-2.15.90.0.1.1/bfd/elf64-mips.c
--- binutils-2.15.90.0.1.1.orig/bfd/elf64-mips.c	2004-01-14 16:07:43.000000000 -0500
+++ binutils-2.15.90.0.1.1/bfd/elf64-mips.c	2004-03-10 00:29:34.412478000 -0500
@@ -2676,6 +2676,11 @@ const struct elf_size_info mips_elf64_si
 #define ELF_ARCH			bfd_arch_mips
 #define ELF_MACHINE_CODE		EM_MIPS
 
+/* The SVR4 MIPS ABI says that this should be 0x10000, but Irix 5 uses
+   a value of 0x1000, and we are compatible.
+   FIXME: How does this affect NewABI?  */
+#define ELF_MAXPAGESIZE			0x1000
+
 #define elf_backend_collect		TRUE
 #define elf_backend_type_change_ok	TRUE
 #define elf_backend_can_gc_sections	TRUE
@@ -2786,30 +2791,20 @@ extern bfd_boolean bfd_elf64_archive_wri
 #define TARGET_BIG_SYM			bfd_elf64_bigmips_vec
 #define TARGET_BIG_NAME			"elf64-bigmips"
 
-/* The SVR4 MIPS ABI says that this should be 0x10000, but Irix 5 uses
-   a value of 0x1000, and we are compatible.
-   FIXME: How does this affect NewABI?  */
-#define ELF_MAXPAGESIZE			0x1000
-
 #include "elf64-target.h"
 
+#define INCLUDED_TARGET_FILE            /* More a type of flag.  */
+
 /* The SYSV-style 'traditional' (n)64 NewABI.  */
 #undef TARGET_LITTLE_SYM
 #undef TARGET_LITTLE_NAME
 #undef TARGET_BIG_SYM
 #undef TARGET_BIG_NAME
 
-#undef ELF_MAXPAGESIZE
-
 #define TARGET_LITTLE_SYM               bfd_elf64_tradlittlemips_vec
 #define TARGET_LITTLE_NAME              "elf64-tradlittlemips"
 #define TARGET_BIG_SYM                  bfd_elf64_tradbigmips_vec
 #define TARGET_BIG_NAME                 "elf64-tradbigmips"
 
-/* The SVR4 MIPS ABI says that this should be 0x10000, and Linux uses
-   page sizes of up to that limit, so we need to respect it.  */
-#define ELF_MAXPAGESIZE			0x10000
-#define elf64_bed			elf64_tradbed
-
 /* Include the target file again for this target.  */
 #include "elf64-target.h"
diff -Naurp binutils-2.15.90.0.1.1.orig/bfd/elfn32-mips.c binutils-2.15.90.0.1.1/bfd/elfn32-mips.c
--- binutils-2.15.90.0.1.1.orig/bfd/elfn32-mips.c	2004-01-14 16:07:43.000000000 -0500
+++ binutils-2.15.90.0.1.1/bfd/elfn32-mips.c	2004-03-10 00:29:34.422478000 -0500
@@ -1873,6 +1873,11 @@ static const struct ecoff_debug_swap mip
 #define ELF_ARCH			bfd_arch_mips
 #define ELF_MACHINE_CODE		EM_MIPS
 
+/* The SVR4 MIPS ABI says that this should be 0x10000, but Irix 5 uses
+   a value of 0x1000, and we are compatible.
+   FIXME: How does this affect NewABI?  */
+#define ELF_MAXPAGESIZE			0x1000
+
 #define elf_backend_collect		TRUE
 #define elf_backend_type_change_ok	TRUE
 #define elf_backend_can_gc_sections	TRUE
@@ -1954,30 +1959,20 @@ static const struct ecoff_debug_swap mip
 #define TARGET_BIG_SYM                  bfd_elf32_nbigmips_vec
 #define TARGET_BIG_NAME                 "elf32-nbigmips"
 
-/* The SVR4 MIPS ABI says that this should be 0x10000, but Irix 5 uses
-   a value of 0x1000, and we are compatible.
-   FIXME: How does this affect NewABI?  */
-#define ELF_MAXPAGESIZE			0x1000
-
 #include "elf32-target.h"
 
 /* Support for traditional mips targets using n32 ABI.  */
+#define INCLUDED_TARGET_FILE            /* More a type of flag.  */
+
 #undef TARGET_LITTLE_SYM
 #undef TARGET_LITTLE_NAME
 #undef TARGET_BIG_SYM
 #undef TARGET_BIG_NAME
 
-#undef ELF_MAXPAGESIZE
-
 #define TARGET_LITTLE_SYM               bfd_elf32_ntradlittlemips_vec
 #define TARGET_LITTLE_NAME              "elf32-ntradlittlemips"
 #define TARGET_BIG_SYM                  bfd_elf32_ntradbigmips_vec
 #define TARGET_BIG_NAME                 "elf32-ntradbigmips"
 
-/* The SVR4 MIPS ABI says that this should be 0x10000, and Linux uses
-   page sizes of up to that limit, so we need to respect it.  */
-#define ELF_MAXPAGESIZE			0x10000
-#define elf32_bed			elf32_tradbed
-
 /* Include the target file again for this target.  */
 #include "elf32-target.h"
