--- binutils/ld/ldmain.c
+++ binutils/ld/ldmain.c
@@ -273,2 +273,5 @@ main (int argc, char **argv)
   link_info.emit_hash = TRUE;
+#ifndef __mips__
+  link_info.emit_gnu_hash = TRUE;
+#endif
   link_info.callbacks = &link_callbacks;

work around minor linker bug:
http://sourceware.org/bugzilla/show_bug.cgi?id=11355

--- binutils/ld/testsuite/ld-elfvsb/hidden2.d
+++ binutils/ld/testsuite/ld-elfvsb/hidden2.d
@@ -1,5 +1,5 @@
 #source: hidden2.s
-#ld: -shared -T hidden2.ld
+#ld: -shared -T hidden2.ld --hash-style=sysv
 #readelf: -Ds
 # It is also ok to remove this symbol, but we currently make it local.
 

many tests rely on order of symbols and the gnu hash style changes that.
so to avoid having to constantly thrash in the test files, use the normal
hash style that everyone tests against.

--- binutils/ld/testsuite/lib/ld-lib.exp
+++ binutils/ld/testsuite/lib/ld-lib.exp
@@ -84,7 +84,7 @@
     global HOSTING_EMU
 
     remote_file host delete $target
-    return [run_host_cmd_yesno "$ld" "$HOSTING_EMU -o $target -r $objects"]
+    return [run_host_cmd_yesno "$ld" "$HOSTING_EMU --hash-style=sysv -o $target -r $objects"]
 }
 
 # Check to see if ld is being invoked with a non-endian output format
@@ -158,7 +158,7 @@
 
     remote_file host delete $target
 
-    return [run_host_cmd_yesno "$ld" "$HOSTING_EMU $flags -o $target $objs $libs"]
+    return [run_host_cmd_yesno "$ld" "$HOSTING_EMU --hash-style=sysv $flags -o $target $objs $libs"]
 }
 
 # Link a program using ld, without including any libraries.
@@ -189,7 +189,7 @@
 
     remote_file host delete $target
 
-    set exec_output [run_host_cmd "$ld" "$flags -o $target $objects"]
+    set exec_output [run_host_cmd "$ld" "--hash-style=sysv $flags -o $target $objects"]
     set exec_output [prune_warnings $exec_output]
 
     # We don't care if we get a warning about a non-existent start
